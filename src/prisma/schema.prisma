generator client {
  provider = "prisma-client-js"
}

model CreativeWork {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  abstract String
  authors CreativePeople[]
}



model CreativePeople{
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  creativeWorks CreativeWork @relation(fields: [creativeWorkId], references: [id])
  creativeWorkId Int
  people Person @relation(fields: [personId], references: [id])
  personId Int
  @@id([creativeWorkId, personId])
}

model Person {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String?
  lastName String?
  users UserPeople[]
  creativeWorks CreativePeople[]
}

//model MusicComposition {
//  id Int @id @default(autoincrement())
//  createdAt DateTime @default(now())
//  updatedAt DateTime @updatedAt
//}

//model MediaObject {
//  id Int @id @default(autoincrement())
//  createdAt DateTime @default(now())
//  updatedAt DateTime @updatedAt
//}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email String @unique
  people UserPeople[]
}

model UserPeople{
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  userId Int
  people Person @relation(fields: [personId], references: [id])
  personId Int
   @@id([userId, personId])
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}